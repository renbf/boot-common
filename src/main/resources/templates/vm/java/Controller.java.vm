package ${packageController};

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;


import ${packageDomain}.${className};
import ${packageService}.${className}Service;


/**
 * ${tableComment} 信息操作处理
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Controller
@RequestMapping("/api/${classname}")
public class ${className}Controller
{
    private static final Logger log = LoggerFactory.getLogger(${className}Controller.class);

	@Autowired
	private ${className}Service ${classname}Service;
	
	/**
	 * 查询${tableComment}列表
	 */
	@RequiresPermissions("api:${classname}:list")
	@PostMapping("/list")
	@ResponseBody
	public Map<String,Object> list(${className} ${classname})
	{
        Map<String,Object> resultMap = new HashMap<String,Object>();
        try {
			resultMap = ${classname}Service.select${className}List(${classname});
        } catch (Exception e) {
            log.error("查询${tableComment}列表异常",e);
            resultMap.put("code",-1);
            resultMap.put("msg","查询${tableComment}列表异常");
        }
        return resultMap;
	}
	

	/**
	 * 新增保存${tableComment}
	 */
	@RequiresPermissions("api:${classname}:add")
	@PostMapping("/add")
	@ResponseBody
	public Map<String,Object> addSave(${className} ${classname})
	{		
        Map<String,Object> resultMap = new HashMap<String,Object>();
        try {
			resultMap = ${classname}Service.insert${className}(${classname});
        } catch (Exception e) {
            log.error("新增保存${tableComment}异常",e);
            resultMap.put("code",-1);
            resultMap.put("msg","新增保存${tableComment}异常");
        }
        return resultMap;
	}

	/**
	 * 修改保存${tableComment}
	 */
	@RequiresPermissions("api:${classname}:edit")
	@PostMapping("/edit")
	@ResponseBody
	public Map<String,Object> editSave(${className} ${classname})
	{		
        Map<String,Object> resultMap = new HashMap<String,Object>();
        try {
			resultMap = ${classname}Service.update${className}(${classname});
        } catch (Exception e) {
            log.error("修改保存${tableComment}异常",e);
            resultMap.put("code",-1);
            resultMap.put("msg","修改保存${tableComment}异常");
        }
        return resultMap;
	}
	
	/**
	 * 删除${tableComment}
	 */
	@RequiresPermissions("api:${classname}:remove")
	@PostMapping( "/remove")
	@ResponseBody
	public Map<String,Object> remove(String ids)
	{
        Map<String,Object> resultMap = new HashMap<String,Object>();
        try {
			resultMap = ${classname}Service.delete${className}ByIds(ids);
        } catch (Exception e) {
            log.error("删除${tableComment}异常",e);
            resultMap.put("code",-1);
            resultMap.put("msg","删除${tableComment}异常");
        }
        return resultMap;
	}
	
}
